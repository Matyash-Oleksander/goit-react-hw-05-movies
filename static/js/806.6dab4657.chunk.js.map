{"version":3,"file":"static/js/806.6dab4657.chunk.js","mappings":"qOAEaA,E,OAAmBC,GAAAA,GAAH,iL,kBCmC7B,EA/BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAUC,EAAAA,EAAAA,MAYhB,OAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAWM,EAAEC,QACd,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACP,KAGF,4BACIF,EAAQY,SAAU,SAAC,IAAD,4CACpB,SAACf,EAAD,UACGG,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAKZ,QAIR,C,uGCjCYG,EAAanB,EAAAA,GAAAA,KAAH,sEAKVoB,EAAUpB,EAAAA,GAAAA,IAAH,mI,qQCLdqB,EAAU,mCAGhBC,EAAAA,GAAAA,SAAAA,QAFiB,+BAIV,IAAMC,EAAY,6BAGZC,EAAQ,QACRC,EAAQ,QAIRC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACFL,EAAAA,GAAAA,IAAA,uCACWD,EADX,iBAC2BM,IAFzB,uBACjBC,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAW,mCAAG,WAAMzB,GAAN,yFACFkB,EAAAA,GAAAA,IAAA,iBAAoBlB,EAApB,oBAAuCiB,IADrC,uBACjBO,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXE,EAAY,mCAAG,WAAM1B,GAAN,yFACHkB,EAAAA,GAAAA,IAAA,iBACXlB,EADW,4BACgBiB,EADhB,oBADG,uBAClBO,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZrB,EAAe,mCAAG,WAAMH,GAAN,yFACNkB,EAAAA,GAAAA,IAAA,iBACXlB,EADW,4BACgBiB,EADhB,2BADM,uBACrBO,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAc,mCAAG,WAAOC,EAAOL,GAAd,yFACLL,EAAAA,GAAAA,IAAA,gCACID,EADJ,kBACqBW,EADrB,gCACkDL,IAF7C,uBACpBC,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,uD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","pages/Movies/Movies.styled.js","pages/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.ul`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  justify-content: center;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n","import { useOutletContext } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../../pages/api';\nimport { ReviewsContainer } from './Reviews.styled';\nimport { Message } from 'pages/Movies/Movies.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const movieId = useOutletContext();\n\n  useEffect(() => {\n    try {\n      getMovieReviews(movieId).then(r => {\n        setReviews(r.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {!reviews.length && <Message>Sorry! Information not found</Message>}\n      <ReviewsContainer>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ReviewsContainer>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Message = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import axios from 'axios';\n\nconst API_KEY = '39c85cbe6405a47f44401a8e3d701a0f';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const BASE_IMG_URL = `https://image.tmdb.org/t/p`;\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n\nexport const getTrending = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}`\n  );\n  return data;\n};\n\n// import axios from 'axios';\n\n// const BASE_URL = `https://api.themoviedb.org/3/`;\n\n// // const BASE_GENRE_URL = 'https://api.themoviedb.org/3/genre/movie/list?';\n\n// // const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\n// const API_KEY = '39c85cbe6405a47f44401a8e3d701a0f';\n\n// export const BASE_IMG_URL = `https://image.tmdb.org/t/p`;\n// export const IMG_W500 = `/w500`;\n// export const IMG_W400 = `/w400`;\n// export const IMG_W300 = `/w300`;\n// export const IMG_W200 = `/w200`;\n// export const IMG_W100 = `/w100`;\n// export const IMG_ORIG = `/original`;\n\n// axios.defaults.baseURL = BASE_URL;\n\n// export const fetchMovies = async () => {\n//   try {\n//     const r = await axios.get(\n//       `${BASE_URL}trending/movie/day?&api_key=${API_KEY}`\n//     );\n//     console.log(r.data);\n//     // console.log(r.data.id);\n//     return r.data;\n//   } catch (error) {}\n// };\n\n// export const getFilmById = async id => {\n//   const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n//   console.log(data);\n//   return data;\n// };\n"],"names":["ReviewsContainer","styled","useState","reviews","setReviews","movieId","useOutletContext","useEffect","getMovieReviews","then","r","results","error","console","log","length","map","id","author","content","SearchForm","Message","API_KEY","axios","BASE_IMG_URL","IMG_W300","IMG_W200","getTrending","page","data","getFilmById","getMovieCast","getSearchMovie","query"],"sourceRoot":""}