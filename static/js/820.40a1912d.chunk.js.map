{"version":3,"file":"static/js/820.40a1912d.chunk.js","mappings":"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","sources":["components/FilmList/FilmsList.styled.js","components/FilmList/FilmsList.js","pages/Movies/Movies.js","pages/Movies/Movies.styled.js","pages/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsContainer = styled.ul`\n  margin-top: 16px;\n  margin-bottom: 24px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const FilmItem = styled.li`\n  cursor: pointer;\n  transition: all;\n  border-radius: 10px;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03) translateZ(0);\n    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: inherit;\n  box-shadow: 0px 3px 4px 1px rgba(44, 133, 200, 0.2);\n  height: 450px;\n  max-width: 300px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  max-width: 300px;\n`;\n","import PropTypes from 'prop-types';\nimport { IMG_W300, BASE_IMG_URL } from '../../pages/api';\nimport {\n  FilmsContainer,\n  FilmItem,\n  FilmPoster,\n  FilmTitle,\n} from './FilmsList.styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmsList = ({ films, location }) => {\n  return (\n    <FilmsContainer>\n      {films.map(({ id, title, poster_path }) => {\n        return (\n          <Link to={`/movies/${id}`} key={id} state={{ from: location }}>\n            <FilmItem>\n              <FilmPoster\n                src={\n                  poster_path !== null\n                    ? `${BASE_IMG_URL}${IMG_W300}${poster_path}`\n                    : 'https://houseofzayn.co.nz/wp-content/uploads/2019/08/nopicture.gif'\n                }\n                alt={title}\n              />\n              <FilmTitle>{title}</FilmTitle>\n            </FilmItem>\n          </Link>\n        );\n      })}\n    </FilmsContainer>\n  );\n};\n\nFilmsList.propTypes = {\n  films: PropTypes.array.isRequired,\n  location: PropTypes.string,\n};\n","import { SearchForm, Message } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchMovie } from '../api';\nimport { FilmsList } from '../../components/FilmList/FilmsList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [message, setMessage] = useState(\n    'To display films, enter a query in the search field'\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const toBackLocation = `${location.pathname}${location.search}`;\n\n  const searchFilms = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      return setMessage(\n        'Nothing entered! To display films, enter a query in the search field'\n      );\n    }\n    setFilms([]);\n    setSearchParams(query !== '' ? { query: query } : {});\n    setQuery('');\n  };\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setMessage('');\n    getSearchMovie(searchQuery).then(({ total_pages, results }) =>\n      setFilms(results)\n    );\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery && !films.length) {\n      setMessage('Sorry, nothing was found, please try your search again');\n    }\n  }, [films.length, searchQuery]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={searchFilms}>\n        <input\n          type=\"text\"\n          name=\"findForm\"\n          placeholder=\"Search films\"\n          value={query}\n          onChange={event => setQuery(event.currentTarget.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </SearchForm>\n      {!films.length && <Message>{message}</Message>}\n      <FilmsList films={films} location={toBackLocation} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Message = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import axios from 'axios';\n\nconst API_KEY = '39c85cbe6405a47f44401a8e3d701a0f';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const BASE_IMG_URL = `https://image.tmdb.org/t/p`;\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n\nexport const getTrending = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const getFilmById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}`\n  );\n  return data;\n};\n\n// import axios from 'axios';\n\n// const BASE_URL = `https://api.themoviedb.org/3/`;\n\n// // const BASE_GENRE_URL = 'https://api.themoviedb.org/3/genre/movie/list?';\n\n// // const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\n// const API_KEY = '39c85cbe6405a47f44401a8e3d701a0f';\n\n// export const BASE_IMG_URL = `https://image.tmdb.org/t/p`;\n// export const IMG_W500 = `/w500`;\n// export const IMG_W400 = `/w400`;\n// export const IMG_W300 = `/w300`;\n// export const IMG_W200 = `/w200`;\n// export const IMG_W100 = `/w100`;\n// export const IMG_ORIG = `/original`;\n\n// axios.defaults.baseURL = BASE_URL;\n\n// export const fetchMovies = async () => {\n//   try {\n//     const r = await axios.get(\n//       `${BASE_URL}trending/movie/day?&api_key=${API_KEY}`\n//     );\n//     console.log(r.data);\n//     // console.log(r.data.id);\n//     return r.data;\n//   } catch (error) {}\n// };\n\n// export const getFilmById = async id => {\n//   const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n//   console.log(data);\n//   return data;\n// };\n"],"names":["FilmsContainer","styled","FilmItem","FilmPoster","FilmTitle","FilmsList","films","location","map","id","title","poster_path","to","state","from","src","BASE_IMG_URL","IMG_W300","alt","useState","query","setQuery","setFilms","message","setMessage","useSearchParams","searchParams","setSearchParams","useLocation","toBackLocation","pathname","search","searchQuery","get","useEffect","getSearchMovie","then","total_pages","results","length","onSubmit","event","preventDefault","trim","type","name","placeholder","value","onChange","currentTarget","SearchForm","Message","API_KEY","axios","IMG_W200","getTrending","page","data","getFilmById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}